// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')

describe('edit_profile_profilepicture', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('edit_profile_profilepicture', async function() {
    // Test name: edit_profile_profilepicture
    // Step # | name | target | value
    // 1 | open | https://connectco.netlify.app/ | 
    await driver.get("https://connectco.netlify.app/")
    // 2 | setWindowSize | 1051x798 | 
    await driver.manage().window().setRect({ width: 1051, height: 798 })
    // 3 | click | linkText=Sign In | 
    await driver.findElement(By.linkText("Sign In")).click()
    // 4 | click | name=email | 
    await driver.findElement(By.name("email")).click()
    // 5 | type | name=email | ghorizeelj@gmail.com
    await driver.findElement(By.name("email")).sendKeys("ghorizeelj@gmail.com")
    // 6 | click | name=password | 
    await driver.findElement(By.name("password")).click()
    // 7 | type | name=password | Password123New
    await driver.findElement(By.name("password")).sendKeys("Password123New")
    // 8 | click | css=.fi-rr-eye-crossed | 
    await driver.findElement(By.css(".fi-rr-eye-crossed")).click()
    // 9 | click | css=.mt-14 | 
    await driver.findElement(By.css(".mt-14")).click()
    // 10 | mouseOver | css=.h-full | 
    {
      const element = await driver.findElement(By.css(".h-full"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    // 11 | click | css=.w-12 > .w-full | 
    await driver.findElement(By.css(".w-12 > .w-full")).click()
    // 12 | mouseOut | css=.w-12 > .w-full | 
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
    // 13 | click | linkText=Profile | 
    await driver.findElement(By.linkText("Profile")).click()
    // 14 | click | id=root | 
    await driver.findElement(By.id("root")).click()
    // 15 | doubleClick | id=root | 
    {
      const element = await driver.findElement(By.id("root"))
      await driver.actions({ bridge: true}).doubleClick(element).perform()
    }
    // 16 | click | css=.h-full | 
    await driver.findElement(By.css(".h-full")).click()
    // 17 | click | linkText=Settings | 
    await driver.findElement(By.linkText("Settings")).click()
    // 18 | click | css=.max-md\3A-mt-8 | 
    await driver.findElement(By.css(".max-md\\3A-mt-8")).click()
    // 19 | doubleClick | css=.max-md\3A-mt-8 | 
    {
      const element = await driver.findElement(By.css(".max-md\\3A-mt-8"))
      await driver.actions({ bridge: true}).doubleClick(element).perform()
    }
    // 20 | click | linkText=Edit Profile | 
    await driver.findElement(By.linkText("Edit Profile")).click()
    // 21 | click | css=.top-0 | 
    await driver.findElement(By.css(".top-0")).click()
    // 22 | type | id=uploadImg | C:\photos\gym\IMG_20240210_113706_627.jpg
    await driver.findElement(By.id("uploadImg")).sendKeys("C:\\photos\\gym\\IMG_20240210_113706_627.jpg")
    // 23 | click | css=.btn-light | 
    await driver.findElement(By.css(".btn-light")).click()
    // 24 | click | css=.btn-dark | 
    await driver.findElement(By.css(".btn-dark")).click()
    // 25 | click | css=.object-cover | 
    await driver.findElement(By.css(".object-cover")).click()
    // 26 | click | css=.text-left > .text-dark-grey | 
    await driver.findElement(By.css(".text-left > .text-dark-grey")).click()
    // 27 | runScript | window.scrollTo(0,0) | 
    await driver.executeScript("window.scrollTo(0,0)")
    // 28 | click | css=html | 
    await driver.findElement(By.css("html")).click()
    // 29 | doubleClick | css=html | 
    {
      const element = await driver.findElement(By.css("html"))
      await driver.actions({ bridge: true}).doubleClick(element).perform()
    }
  })
})
