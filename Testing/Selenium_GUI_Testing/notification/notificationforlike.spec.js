// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')

describe('Notification_for_like', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('Notification_for_like', async function() {
    // Test name: Notification_for_like
    // Step # | name | target | value
    // 1 | open | https://connectco.netlify.app/ | 
    await driver.get("https://connectco.netlify.app/")
    // 2 | setWindowSize | 1536x816 | 
    await driver.manage().window().setRect({ width: 1536, height: 816 })
    // 3 | mouseOver | linkText=Sign In | 
    {
      const element = await driver.findElement(By.linkText("Sign In"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    // 4 | click | linkText=Sign In | 
    await driver.findElement(By.linkText("Sign In")).click()
    // 5 | mouseOut | linkText=Sign In | 
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
    // 6 | click | name=email | 
    await driver.findElement(By.name("email")).click()
    // 7 | type | name=email | ghorizeelj@gmail.com
    await driver.findElement(By.name("email")).sendKeys("ghorizeelj@gmail.com")
    // 8 | click | name=password | 
    await driver.findElement(By.name("password")).click()
    // 9 | type | name=password | Password123New
    await driver.findElement(By.name("password")).sendKeys("Password123New")
    // 10 | click | css=.mt-14 | 
    await driver.findElement(By.css(".mt-14")).click()
    // 11 | click | css=.pl-6 | 
    await driver.findElement(By.css(".pl-6")).click()
    // 12 | type | css=.pl-6 | chess
    await driver.findElement(By.css(".pl-6")).sendKeys("chess")
    // 13 | sendKeys | css=.pl-6 | ${KEY_ENTER}
    await driver.findElement(By.css(".pl-6")).sendKeys(Key.ENTER)
    // 14 | click | css=.gap-8 > .w-full | 
    await driver.findElement(By.css(".gap-8 > .w-full")).click()
    // 15 | click | css=.flex:nth-child(5) .w-10:nth-child(1) > .fi | 
    await driver.findElement(By.css(".flex:nth-child(5) .w-10:nth-child(1) > .fi")).click()
    // 16 | click | css=.object-cover | 
    await driver.findElement(By.css(".object-cover")).click()
    // 17 | click | css=.font-bold | 
    await driver.findElement(By.css(".font-bold")).click()
    // 18 | click | css=#root > div | 
    await driver.findElement(By.css("#root > div")).click()
    // 19 | doubleClick | css=#root > div | 
    {
      const element = await driver.findElement(By.css("#root > div"))
      await driver.actions({ bridge: true}).doubleClick(element).perform()
    }
    // 20 | click | linkText=Sign In | 
    await driver.findElement(By.linkText("Sign In")).click()
    // 21 | click | name=email | 
    await driver.findElement(By.name("email")).click()
    // 22 | type | name=email | zeelghoritry@gmail.com
    await driver.findElement(By.name("email")).sendKeys("zeelghoritry@gmail.com")
    // 23 | click | name=password | 
    await driver.findElement(By.name("password")).click()
    // 24 | type | name=password | ZeelGhoriTry54321
    await driver.findElement(By.name("password")).sendKeys("ZeelGhoriTry54321")
    // 25 | click | css=.mt-14 | 
    await driver.findElement(By.css(".mt-14")).click()
    // 26 | click | css=.fi-rr-bell | 
    await driver.findElement(By.css(".fi-rr-bell")).click()
    // 27 | click | css=.py-2:nth-child(2) | 
    await driver.findElement(By.css(".py-2:nth-child(2)")).click()
    // 28 | click | linkText=@zeel ghori | 
    await driver.findElement(By.linkText("@zeel ghori")).click()
  })
})
