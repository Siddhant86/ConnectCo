// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')

describe('Draft Blog', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').usingServer('http://localhost:4444/wd/hub').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('Draft Blog', async function() {
    // Test name: Draft Blog
    // Step # | name | target | value | comment
    // 1 | open | https://connectco.netlify.app/ |  | 
    await driver.get("https://connectco.netlify.app/")
    // 2 | setWindowSize | 1398x792 |  | 
    await driver.manage().window().setRect({ width: 1398, height: 792 })
    // 3 | click | linkText=Sign In |  | 
    await driver.findElement(By.linkText("Sign In")).click()
    // 4 | click | name=email |  | 
    await driver.findElement(By.name("email")).click()
    // 5 | type | name=email | pareshpatel@gmail.com | 
    await driver.findElement(By.name("email")).sendKeys("pareshpatel@gmail.com")
    // 6 | type | name=password | Paresh123 | 
    await driver.findElement(By.name("password")).sendKeys("Paresh123")
    // 7 | click | css=.mt-14 |  | 
    await driver.findElement(By.css(".mt-14")).click()
    // 8 | click | css=.hidden > p |  | 
    await driver.findElement(By.css(".hidden > p")).click()
    // 9 | click | css=.z-20 |  | 
    await driver.findElement(By.css(".z-20")).click()
    // 10 | type | css=.text-4xl | matlab simulink | 
    await driver.findElement(By.css(".text-4xl")).sendKeys("matlab simulink")
    // 11 | click | css=.ce-paragraph |  | 
    await driver.findElement(By.css(".ce-paragraph")).click()
    // 12 | editContent | css=.ce-paragraph | abc | 
    {
      const element = await driver.findElement(By.css(".ce-paragraph"))
      await driver.executeScript("if(arguments[0].contentEditable === 'true') {arguments[0].innerText = 'abc'}", element)
    }
    // 13 | click | css=.btn-light |  | 
    await driver.findElement(By.css(".btn-light")).click()
    // 14 | runScript | window.scrollTo(0,0) |  | 
    await driver.executeScript("window.scrollTo(0,0)")
    // 15 | click | css=.h-full |  | 
    await driver.findElement(By.css(".h-full")).click()
    // 16 | click | css=.mg-1 |  | 
    await driver.findElement(By.css(".mg-1")).click()
    // 17 | click | css=html |  | 
    await driver.findElement(By.css("html")).click()
    // 18 | doubleClick | css=html |  | 
    {
      const element = await driver.findElement(By.css("html"))
      await driver.actions({ bridge: true}).doubleClick(element).perform()
    }
  })
})
